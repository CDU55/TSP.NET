// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/PostComment.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcServer {
  public static partial class PostCommentService
  {
    static readonly string __ServiceName = "PostCommentService";

    static readonly grpc::Marshaller<global::GrpcServer.ObjectIdRequest> __Marshaller_ObjectIdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.ObjectIdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.PostDTO> __Marshaller_PostDTO = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.PostDTO.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.StringRequest> __Marshaller_StringRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.StringRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.BoolReply> __Marshaller_BoolReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.BoolReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.EmptyMessage> __Marshaller_EmptyMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.EmptyMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.PostDTOCollenction> __Marshaller_PostDTOCollenction = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.PostDTOCollenction.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.CommentDTO> __Marshaller_CommentDTO = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.CommentDTO.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.CommentAndPostId> __Marshaller_CommentAndPostId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.CommentAndPostId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.UpdateCommentMessage> __Marshaller_UpdateCommentMessage = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.UpdateCommentMessage.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.CommentDTOCollection> __Marshaller_CommentDTOCollection = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.CommentDTOCollection.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcServer.ObjectIdRequest, global::GrpcServer.PostDTO> __Method_GetPostById = new grpc::Method<global::GrpcServer.ObjectIdRequest, global::GrpcServer.PostDTO>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPostById",
        __Marshaller_ObjectIdRequest,
        __Marshaller_PostDTO);

    static readonly grpc::Method<global::GrpcServer.StringRequest, global::GrpcServer.PostDTO> __Method_GetPostByTitle = new grpc::Method<global::GrpcServer.StringRequest, global::GrpcServer.PostDTO>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPostByTitle",
        __Marshaller_StringRequest,
        __Marshaller_PostDTO);

    static readonly grpc::Method<global::GrpcServer.PostDTO, global::GrpcServer.PostDTO> __Method_SubmitPost = new grpc::Method<global::GrpcServer.PostDTO, global::GrpcServer.PostDTO>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SubmitPost",
        __Marshaller_PostDTO,
        __Marshaller_PostDTO);

    static readonly grpc::Method<global::GrpcServer.PostDTO, global::GrpcServer.PostDTO> __Method_UpdatePost = new grpc::Method<global::GrpcServer.PostDTO, global::GrpcServer.PostDTO>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePost",
        __Marshaller_PostDTO,
        __Marshaller_PostDTO);

    static readonly grpc::Method<global::GrpcServer.ObjectIdRequest, global::GrpcServer.BoolReply> __Method_DeletePost = new grpc::Method<global::GrpcServer.ObjectIdRequest, global::GrpcServer.BoolReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeletePost",
        __Marshaller_ObjectIdRequest,
        __Marshaller_BoolReply);

    static readonly grpc::Method<global::GrpcServer.EmptyMessage, global::GrpcServer.PostDTOCollenction> __Method_GetAllPosts = new grpc::Method<global::GrpcServer.EmptyMessage, global::GrpcServer.PostDTOCollenction>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllPosts",
        __Marshaller_EmptyMessage,
        __Marshaller_PostDTOCollenction);

    static readonly grpc::Method<global::GrpcServer.ObjectIdRequest, global::GrpcServer.CommentDTO> __Method_GetCommentById = new grpc::Method<global::GrpcServer.ObjectIdRequest, global::GrpcServer.CommentDTO>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCommentById",
        __Marshaller_ObjectIdRequest,
        __Marshaller_CommentDTO);

    static readonly grpc::Method<global::GrpcServer.CommentDTO, global::GrpcServer.CommentDTO> __Method_SubmitComment = new grpc::Method<global::GrpcServer.CommentDTO, global::GrpcServer.CommentDTO>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SubmitComment",
        __Marshaller_CommentDTO,
        __Marshaller_CommentDTO);

    static readonly grpc::Method<global::GrpcServer.CommentAndPostId, global::GrpcServer.CommentDTO> __Method_AddComment = new grpc::Method<global::GrpcServer.CommentAndPostId, global::GrpcServer.CommentDTO>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddComment",
        __Marshaller_CommentAndPostId,
        __Marshaller_CommentDTO);

    static readonly grpc::Method<global::GrpcServer.UpdateCommentMessage, global::GrpcServer.CommentDTO> __Method_UpdateComment = new grpc::Method<global::GrpcServer.UpdateCommentMessage, global::GrpcServer.CommentDTO>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateComment",
        __Marshaller_UpdateCommentMessage,
        __Marshaller_CommentDTO);

    static readonly grpc::Method<global::GrpcServer.ObjectIdRequest, global::GrpcServer.BoolReply> __Method_DeleteComment = new grpc::Method<global::GrpcServer.ObjectIdRequest, global::GrpcServer.BoolReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteComment",
        __Marshaller_ObjectIdRequest,
        __Marshaller_BoolReply);

    static readonly grpc::Method<global::GrpcServer.ObjectIdRequest, global::GrpcServer.CommentDTOCollection> __Method_GetAllPostRelateComments = new grpc::Method<global::GrpcServer.ObjectIdRequest, global::GrpcServer.CommentDTOCollection>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllPostRelateComments",
        __Marshaller_ObjectIdRequest,
        __Marshaller_CommentDTOCollection);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcServer.PostCommentReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PostCommentService</summary>
    [grpc::BindServiceMethod(typeof(PostCommentService), "BindService")]
    public abstract partial class PostCommentServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.PostDTO> GetPostById(global::GrpcServer.ObjectIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.PostDTO> GetPostByTitle(global::GrpcServer.StringRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.PostDTO> SubmitPost(global::GrpcServer.PostDTO request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.PostDTO> UpdatePost(global::GrpcServer.PostDTO request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.BoolReply> DeletePost(global::GrpcServer.ObjectIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.PostDTOCollenction> GetAllPosts(global::GrpcServer.EmptyMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.CommentDTO> GetCommentById(global::GrpcServer.ObjectIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.CommentDTO> SubmitComment(global::GrpcServer.CommentDTO request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.CommentDTO> AddComment(global::GrpcServer.CommentAndPostId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.CommentDTO> UpdateComment(global::GrpcServer.UpdateCommentMessage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.BoolReply> DeleteComment(global::GrpcServer.ObjectIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.CommentDTOCollection> GetAllPostRelateComments(global::GrpcServer.ObjectIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(PostCommentServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetPostById, serviceImpl.GetPostById)
          .AddMethod(__Method_GetPostByTitle, serviceImpl.GetPostByTitle)
          .AddMethod(__Method_SubmitPost, serviceImpl.SubmitPost)
          .AddMethod(__Method_UpdatePost, serviceImpl.UpdatePost)
          .AddMethod(__Method_DeletePost, serviceImpl.DeletePost)
          .AddMethod(__Method_GetAllPosts, serviceImpl.GetAllPosts)
          .AddMethod(__Method_GetCommentById, serviceImpl.GetCommentById)
          .AddMethod(__Method_SubmitComment, serviceImpl.SubmitComment)
          .AddMethod(__Method_AddComment, serviceImpl.AddComment)
          .AddMethod(__Method_UpdateComment, serviceImpl.UpdateComment)
          .AddMethod(__Method_DeleteComment, serviceImpl.DeleteComment)
          .AddMethod(__Method_GetAllPostRelateComments, serviceImpl.GetAllPostRelateComments).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, PostCommentServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetPostById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.ObjectIdRequest, global::GrpcServer.PostDTO>(serviceImpl.GetPostById));
      serviceBinder.AddMethod(__Method_GetPostByTitle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.StringRequest, global::GrpcServer.PostDTO>(serviceImpl.GetPostByTitle));
      serviceBinder.AddMethod(__Method_SubmitPost, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.PostDTO, global::GrpcServer.PostDTO>(serviceImpl.SubmitPost));
      serviceBinder.AddMethod(__Method_UpdatePost, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.PostDTO, global::GrpcServer.PostDTO>(serviceImpl.UpdatePost));
      serviceBinder.AddMethod(__Method_DeletePost, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.ObjectIdRequest, global::GrpcServer.BoolReply>(serviceImpl.DeletePost));
      serviceBinder.AddMethod(__Method_GetAllPosts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.EmptyMessage, global::GrpcServer.PostDTOCollenction>(serviceImpl.GetAllPosts));
      serviceBinder.AddMethod(__Method_GetCommentById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.ObjectIdRequest, global::GrpcServer.CommentDTO>(serviceImpl.GetCommentById));
      serviceBinder.AddMethod(__Method_SubmitComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.CommentDTO, global::GrpcServer.CommentDTO>(serviceImpl.SubmitComment));
      serviceBinder.AddMethod(__Method_AddComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.CommentAndPostId, global::GrpcServer.CommentDTO>(serviceImpl.AddComment));
      serviceBinder.AddMethod(__Method_UpdateComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.UpdateCommentMessage, global::GrpcServer.CommentDTO>(serviceImpl.UpdateComment));
      serviceBinder.AddMethod(__Method_DeleteComment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.ObjectIdRequest, global::GrpcServer.BoolReply>(serviceImpl.DeleteComment));
      serviceBinder.AddMethod(__Method_GetAllPostRelateComments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.ObjectIdRequest, global::GrpcServer.CommentDTOCollection>(serviceImpl.GetAllPostRelateComments));
    }

  }
}
#endregion
